//
//
//  !!! THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT DIRECTLY !!!
//
//  Modify /utils/settings.csv and execute buildsettings.py to generate this source file
//
//  This file includes all the characteristics which are editable
//   Copy and pasted them into code as required (TOOD, automate more)

let radioService;
let rll_min_promise;
let rll_min_value;
let rll_max_promise;
let rll_max_value;
let rll_cnt_promise;
let rll_cnt_value;
let rll_gain_promise;
let rll_gain_value;
let tlt_min_promise;
let tlt_min_value;
let tlt_max_promise;
let tlt_max_value;
let tlt_cnt_promise;
let tlt_cnt_value;
let tlt_gain_promise;
let tlt_gain_value;
let pan_min_promise;
let pan_min_value;
let pan_max_promise;
let pan_max_value;
let pan_cnt_promise;
let pan_cnt_value;
let pan_gain_promise;
let pan_gain_value;
let tltch_promise;
let tltch_value;
let rllch_promise;
let rllch_value;
let panch_promise;
let panch_value;
let alertch_promise;
let alertch_value;
let pwm0_promise;
let pwm0_value;
let pwm1_promise;
let pwm1_value;
let pwm2_promise;
let pwm2_value;
let pwm3_promise;
let pwm3_value;
let an0ch_promise;
let an0ch_value;
let an1ch_promise;
let an1ch_value;
let an2ch_promise;
let an2ch_value;
let an3ch_promise;
let an3ch_value;
let aux0ch_promise;
let aux0ch_value;
let aux1ch_promise;
let aux1ch_value;
let aux2ch_promise;
let aux2ch_value;
let rstppm_promise;
let rstppm_value;

function connectToHT() {
  progress.hidden = false;
  // Can only send commands once device is in developer mode.
  // Put device into developer mode by sending a special string to Anti DOS,
  // 7 to TX Power and 1 to Wake CPU on radio service.
  if (radioService == null) {
    navigator.bluetooth.requestDevice({
      filters: [{
        services: [0xFFFA]  // Headtracker Bluetooth Configuration Service
      }]
    })
    .then(device => {
      console.log('> Found ' + device.name);
      console.log('Connecting to GATT Server...');
      return device.gatt.connect();
    })
    .then(server => {
      gattServer = server;
      return gattServer.getPrimaryService(0xFFFA);
    })
    .then(service => {
      radioService = service;
      return radioService.getCharacteristic(0xF000); // Get first characteristic
    })
    .then(characteristic => {
      console.log(' Found rll_min Characteristic');
      rll_min_promise = characteristic;
      return rll_min_promise.readValue();
    })
    .then(value => {
      rll_min_value = value.getUint16(0, true);
      console.log(rll_min_value);
      return radioService.getCharacteristic(0xF001); // Get rll_max characteristic
    })
    .then(characteristic => {
      console.log(' Found rll_max Characteristic');
      rll_max_promise = characteristic;
      return rll_max_promise.readValue();
    })
    .then(value => {
      rll_max_value = value.getUint16(0, true);
      console.log(rll_max_value);
      return radioService.getCharacteristic(0xF002); // Get rll_cnt characteristic
    })
    .then(characteristic => {
      console.log(' Found rll_cnt Characteristic');
      rll_cnt_promise = characteristic;
      return rll_cnt_promise.readValue();
    })
    .then(value => {
      rll_cnt_value = value.getUint16(0, true);
      console.log(rll_cnt_value);
      return radioService.getCharacteristic(0xF003); // Get rll_gain characteristic
    })
    .then(characteristic => {
      console.log(' Found rll_gain Characteristic');
      rll_gain_promise = characteristic;
      return rll_gain_promise.readValue();
    })
    .then(value => {
      rll_gain_value = value.getUint16(0, true);
      console.log(rll_gain_value);
      return radioService.getCharacteristic(0xF004); // Get tlt_min characteristic
    })
    .then(characteristic => {
      console.log(' Found tlt_min Characteristic');
      tlt_min_promise = characteristic;
      return tlt_min_promise.readValue();
    })
    .then(value => {
      tlt_min_value = value.getUint16(0, true);
      console.log(tlt_min_value);
      return radioService.getCharacteristic(0xF005); // Get tlt_max characteristic
    })
    .then(characteristic => {
      console.log(' Found tlt_max Characteristic');
      tlt_max_promise = characteristic;
      return tlt_max_promise.readValue();
    })
    .then(value => {
      tlt_max_value = value.getUint16(0, true);
      console.log(tlt_max_value);
      return radioService.getCharacteristic(0xF006); // Get tlt_cnt characteristic
    })
    .then(characteristic => {
      console.log(' Found tlt_cnt Characteristic');
      tlt_cnt_promise = characteristic;
      return tlt_cnt_promise.readValue();
    })
    .then(value => {
      tlt_cnt_value = value.getUint16(0, true);
      console.log(tlt_cnt_value);
      return radioService.getCharacteristic(0xF007); // Get tlt_gain characteristic
    })
    .then(characteristic => {
      console.log(' Found tlt_gain Characteristic');
      tlt_gain_promise = characteristic;
      return tlt_gain_promise.readValue();
    })
    .then(value => {
      tlt_gain_value = value.getUint16(0, true);
      console.log(tlt_gain_value);
      return radioService.getCharacteristic(0xF008); // Get pan_min characteristic
    })
    .then(characteristic => {
      console.log(' Found pan_min Characteristic');
      pan_min_promise = characteristic;
      return pan_min_promise.readValue();
    })
    .then(value => {
      pan_min_value = value.getUint16(0, true);
      console.log(pan_min_value);
      return radioService.getCharacteristic(0xF009); // Get pan_max characteristic
    })
    .then(characteristic => {
      console.log(' Found pan_max Characteristic');
      pan_max_promise = characteristic;
      return pan_max_promise.readValue();
    })
    .then(value => {
      pan_max_value = value.getUint16(0, true);
      console.log(pan_max_value);
      return radioService.getCharacteristic(0xF010); // Get pan_cnt characteristic
    })
    .then(characteristic => {
      console.log(' Found pan_cnt Characteristic');
      pan_cnt_promise = characteristic;
      return pan_cnt_promise.readValue();
    })
    .then(value => {
      pan_cnt_value = value.getUint16(0, true);
      console.log(pan_cnt_value);
      return radioService.getCharacteristic(0xF011); // Get pan_gain characteristic
    })
    .then(characteristic => {
      console.log(' Found pan_gain Characteristic');
      pan_gain_promise = characteristic;
      return pan_gain_promise.readValue();
    })
    .then(value => {
      pan_gain_value = value.getInt8(0, true);
      console.log(pan_gain_value);
      return radioService.getCharacteristic(0xF100); // Get tltch characteristic
    })
    .then(characteristic => {
      console.log(' Found tltch Characteristic');
      tltch_promise = characteristic;
      return tltch_promise.readValue();
    })
    .then(value => {
      tltch_value = value.getInt8(0, true);
      console.log(tltch_value);
      return radioService.getCharacteristic(0xF101); // Get rllch characteristic
    })
    .then(characteristic => {
      console.log(' Found rllch Characteristic');
      rllch_promise = characteristic;
      return rllch_promise.readValue();
    })
    .then(value => {
      rllch_value = value.getInt8(0, true);
      console.log(rllch_value);
      return radioService.getCharacteristic(0xF102); // Get panch characteristic
    })
    .then(characteristic => {
      console.log(' Found panch Characteristic');
      panch_promise = characteristic;
      return panch_promise.readValue();
    })
    .then(value => {
      panch_value = value.getInt8(0, true);
      console.log(panch_value);
      return radioService.getCharacteristic(0xF103); // Get alertch characteristic
    })
    .then(characteristic => {
      console.log(' Found alertch Characteristic');
      alertch_promise = characteristic;
      return alertch_promise.readValue();
    })
    .then(value => {
      alertch_value = value.getInt8(0, true);
      console.log(alertch_value);
      return radioService.getCharacteristic(0xF104); // Get pwm0 characteristic
    })
    .then(characteristic => {
      console.log(' Found pwm0 Characteristic');
      pwm0_promise = characteristic;
      return pwm0_promise.readValue();
    })
    .then(value => {
      pwm0_value = value.getInt8(0, true);
      console.log(pwm0_value);
      return radioService.getCharacteristic(0xF105); // Get pwm1 characteristic
    })
    .then(characteristic => {
      console.log(' Found pwm1 Characteristic');
      pwm1_promise = characteristic;
      return pwm1_promise.readValue();
    })
    .then(value => {
      pwm1_value = value.getInt8(0, true);
      console.log(pwm1_value);
      return radioService.getCharacteristic(0xF106); // Get pwm2 characteristic
    })
    .then(characteristic => {
      console.log(' Found pwm2 Characteristic');
      pwm2_promise = characteristic;
      return pwm2_promise.readValue();
    })
    .then(value => {
      pwm2_value = value.getInt8(0, true);
      console.log(pwm2_value);
      return radioService.getCharacteristic(0xF107); // Get pwm3 characteristic
    })
    .then(characteristic => {
      console.log(' Found pwm3 Characteristic');
      pwm3_promise = characteristic;
      return pwm3_promise.readValue();
    })
    .then(value => {
      pwm3_value = value.getInt8(0, true);
      console.log(pwm3_value);
      return radioService.getCharacteristic(0xF108); // Get an0ch characteristic
    })
    .then(characteristic => {
      console.log(' Found an0ch Characteristic');
      an0ch_promise = characteristic;
      return an0ch_promise.readValue();
    })
    .then(value => {
      an0ch_value = value.getInt8(0, true);
      console.log(an0ch_value);
      return radioService.getCharacteristic(0xF109); // Get an1ch characteristic
    })
    .then(characteristic => {
      console.log(' Found an1ch Characteristic');
      an1ch_promise = characteristic;
      return an1ch_promise.readValue();
    })
    .then(value => {
      an1ch_value = value.getInt8(0, true);
      console.log(an1ch_value);
      return radioService.getCharacteristic(0xF10A); // Get an2ch characteristic
    })
    .then(characteristic => {
      console.log(' Found an2ch Characteristic');
      an2ch_promise = characteristic;
      return an2ch_promise.readValue();
    })
    .then(value => {
      an2ch_value = value.getInt8(0, true);
      console.log(an2ch_value);
      return radioService.getCharacteristic(0xF10B); // Get an3ch characteristic
    })
    .then(characteristic => {
      console.log(' Found an3ch Characteristic');
      an3ch_promise = characteristic;
      return an3ch_promise.readValue();
    })
    .then(value => {
      an3ch_value = value.getInt8(0, true);
      console.log(an3ch_value);
      return radioService.getCharacteristic(0xF10C); // Get aux0ch characteristic
    })
    .then(characteristic => {
      console.log(' Found aux0ch Characteristic');
      aux0ch_promise = characteristic;
      return aux0ch_promise.readValue();
    })
    .then(value => {
      aux0ch_value = value.getInt8(0, true);
      console.log(aux0ch_value);
      return radioService.getCharacteristic(0xF10D); // Get aux1ch characteristic
    })
    .then(characteristic => {
      console.log(' Found aux1ch Characteristic');
      aux1ch_promise = characteristic;
      return aux1ch_promise.readValue();
    })
    .then(value => {
      aux1ch_value = value.getInt8(0, true);
      console.log(aux1ch_value);
      return radioService.getCharacteristic(0xF10E); // Get aux2ch characteristic
    })
    .then(characteristic => {
      console.log(' Found aux2ch Characteristic');
      aux2ch_promise = characteristic;
      return aux2ch_promise.readValue();
    })
    .then(value => {
      aux2ch_value = value.getInt8(0, true);
      console.log(aux2ch_value);
      return radioService.getCharacteristic(0xF10F); // Get rstppm characteristic
    })
    .then(characteristic => {
      console.log(' Found rstppm Characteristic');
      rstppm_promise = characteristic;
      return rstppm_promise.readValue();
      return false;
    })
      .then(value => {
      rstppm_value = value.getUint8(0, true);
      console.log(rstppm_value);
    })
    .catch(error => { console.error(error); return true;});
  } else {
    return true;
  }
}
