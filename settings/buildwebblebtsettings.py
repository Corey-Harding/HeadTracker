#!/usr/bin/python

from array import array
import csv

import set_common as s

f = open("../web_configurator/blechars.js","w")
f.write("""\
//
//
//  !!! THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT DIRECTLY !!!
//
//  Modify /utils/settings.csv and execute buildsettings.py to generate this source file
//

let radioService;
let gattServer;
let commandCharacteristic;
""")

# Read the settings
s.readSettings()

# Data Storage Variables
for row in s.settings:
  if row[s.colbleaddr].strip() != "":
    name = row[s.colname].strip()
    addr = row[s.colbleaddr].upper().strip()
    f.write("let " + name + "_promise;\n")
    f.write("let " + name + "_value;\n")

# Update Fields Function
f.write("\nfunction updateFields()\n{\n")
for row in s.settings:
  if row[s.colbleaddr].strip() != "":
    name = row[s.colname].strip()
    f.write("  $(\"#inp_" + name + "\").val("+ name + "_value);\n")
f.write("}\n\n")

# Field Changed, Upload to Tracker
for row in s.settings:
  if row[s.colbleaddr].strip() != "":
    name = row[s.colname].strip()
    addr = row[s.colbleaddr].upper().strip()
    f.write("$('#settings').on('change', '#inp_" + name + "', function() {updateParameter('" + name + "', " + name + "_promise, $('#inp_" + name + "').val())});\n");
f.write("\n")

f.write("""
function connectToHT() {
  if (radioService == null) {
    navigator.bluetooth.requestDevice({
      filters: [{
        services: [0xFFFA]  // Headtracker Bluetooth Configuration Service
      }]
    })
    .then(device => {
      btConnectionStatus('Connecting to HeadTracker...');
      showLoader();
      return device.gatt.connect();
    })
    .then(server => {
      gattServer = server;
      return gattServer.getPrimaryService(0xFFFA);
    })
    .then(service => {
      radioService = service;
      return radioService.getCharacteristic(0xFF00); // Get command characteristic
    })
    .then(characteristic => {
      commandCharacteristic = characteristic;
      btConnectionStatus('Got the Command Characteristic');
      return radioService.getCharacteristic(0xF000); // Get first characteristic
    })
""")

first = True
_lastname = ""
_name = ""
_addr = ""
for row in s.settings:
  if row[s.colbleaddr].strip() != "":
    _name = row[s.colname].strip()
    _addr = row[s.colbleaddr].upper().strip()
    if first == True:
      first = False
    else:
      txt = """\
    .then(characteristic => {{
      {lname}_promise = characteristic;
      return {lname}_promise.readValue();
    }})
    .then(value => {{
      btConnectionStatus(' Got {lname}');
      {lname}_value = value{jtype};
      return radioService.getCharacteristic(0x{addr}); // Get {name} characteristic
    }})
""".format(name = _name, lname = _lastname, addr = _addr, jtype = s.JSDataView(row[s.coltype]))
      f.write(txt)
    _lastname = _name

txt = """\
    .then(characteristic => {{
      {lname}_promise = characteristic;
      return {lname}_promise.readValue();
    }})
      .then(value => {{
      {lname}_value = value{jtype};
      btConnectionStatus("Completed");
      connectionEstablished();
      updateFields();
    }})
    .catch(error => {{ console.error(error); connectionFault(error); return true;}});
  }} else {{
    return true;
  }}
""".format(name = _name, lname = _lastname, addr = _addr, jtype = s.JSDataView(row[s.coltype]))
f.write(txt)

f.write("}\n")
f.close()

print("Generated WebBle Settings File blechars.js")


# BUILD THE HTML SETTINGS LIST

# Data Storage Variables
f = open("../web_configurator/settings.html","w")
f.write("<table id='settingsTable'>\n")
for row in s.settings:
  if row[s.colbleaddr].strip() != "":
    name = row[s.colname].strip()
    min = row[s.colmin]
    max = row[s.colmax]
    desc = row[s.coldesc]
    type = row[s.coltype]
    f.write("<tr><td>" + desc + "</td><td><input type='number' class='htInputField' id='inp_" + name + "'></td></tr>\n")
f.write("</table>\n")
f.close()

print("Generated WebBle Settings File settings.html")